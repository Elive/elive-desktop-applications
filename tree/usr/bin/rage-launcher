#!/bin/bash
source /usr/lib/elive-tools/functions

main(){
    # pre {{{
    local arg cd_previous E_DIR rage_opts

    # }}}
    # not needed if the .desktop launcher uses TryExec to "rage" (it will never appear if there's not rage)
    #if ! el_dependencies_check rage 1>/dev/null 2>&1 ; then
        #el_dependencies_install rage-player
    #fi

    # use the last used files if arguments are not passed, like re-using a playlist
    el_config_get

    # don't use saved playlist if we are passing it
    if [[ -n "$@" ]] ; then
        unset conf_files
    else
        if [[ -n "$conf_files" ]] ; then
            if declare -p conf_files 2>&1 | grep -qs "declare .* conf_files" ; then
                files_old=("${conf_files[@]}")
            else
                files_old="${conf_files}"
            fi
        fi
    fi

    # get list of files to use
    for arg in "$@" "${files_old[@]}"
    do
        if [[ -s "${arg%.*}.srt" ]] && [[ -s "$arg" ]] ; then
            el_array_member_add "$arg" "${conf_files[@]}" ; conf_files=("${_out[@]}")
            el_array_member_add "-sub" "${conf_files[@]}" ; conf_files=("${_out[@]}")
            el_array_member_add "${arg%.*}.srt" "${conf_files[@]}" ; conf_files=("${_out[@]}")
            el_debug "added subtitle for $arg"
        else
            if [[ -s "$arg" ]] ; then
                el_array_member_add "$arg" "${conf_files[@]}" ; conf_files=("${_out[@]}")
            fi
        fi
    done

    # if we have at least a working file, save the list, or re-use the last one
    if [[ -s "${conf_files}" ]] ; then
        el_config_save "conf_files"
    else
        el_config_get
        # get again the list to know the working ones
        for arg in "${conf_files[@]}"
        do
            if [[ -s "${arg%.*}.srt" ]] && [[ -s "$arg" ]] ; then
                el_array_member_add "$arg" "${conf_files[@]}" ; conf_files=("${_out[@]}")
                el_array_member_add "-sub" "${conf_files[@]}" ; conf_files=("${_out[@]}")
                el_array_member_add "${arg%.*}.srt" "${conf_files[@]}" ; conf_files=("${_out[@]}")
                el_debug "added subtitle for $arg"
            else
                if [[ -s "$arg" ]] ; then
                    el_array_member_add "$arg" "${conf_files[@]}" ; conf_files=("${_out[@]}")
                fi
            fi
        done
    fi



    # determine if use GL or not
    # update: rage don't use this option or at least in our build, maybe uses the ones from elementary_config
    #cd_previous="$(pwd)"
    #if [[ -z "$E_CONF_PROFILE" ]] ; then
        #E_CONF_PROFILE="standard"
    #fi
    #if [[ -d "$HOME/.e/e17" ]] ; then
        #E_DIR="$HOME/.e/e17/config/$E_CONF_PROFILE"
    #else
        #E_DIR="$HOME/.e/e/config/$E_CONF_PROFILE"
    #fi

    #cd "$E_DIR"
    #eet -d e.cfg config e.cfg.src
    #eet -d module.comp.cfg config module.comp.cfg.src

    # engine 2 is GL, 1 is software-mode
    #if grep -qs "\"use_composite\" int: 1" "e.cfg.src" && grep -qs "\"engine\" int: 2" "module.comp.cfg.src" ; then
        #rage_opts="-gl"
        #el_debug "using GL mode"
    #fi
    #rm -f e.cfg.src module.comp.cfg.src
    #cd "$cd_previous"

    rage $rage_opts "${conf_files[@]}"

}

#
#  MAIN
#
main "$@"

# vim: set foldmethod=marker :
